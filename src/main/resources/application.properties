#spring.datasource.url=jdbc:h2:mem:testdb;
#spring.datasource.platform=h2
#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.continue-on-error=true


spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.suffix=.html
# Spring Boot can auto-configured H2 database.

spring.jpa.database=H2
spring.datasource.url=jdbc:h2:file:./src/main/resources/schema_h2.sql;MODE=MYSQL
#spring.datasource.url=jdbc:h2:file:/home/melpholan/IdeaProjects/forVKR/osmph2/src/main/resources/schema_h2.sql;MODE=MYSQL
#  MODE=MYSQL
spring.datasource.username=sa
spring.datasource.password1=
spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.max-active=1
spring.jpa.hibernate.ddl-auto=none
spring.h2.console.enabled=true
spring.h2.console.settings.trace=true
spring.h2.console.settings.web-allow-others=true
spring.h2.console.path=/h2
spring.datasource.schema=classpath*:schema_h2.sql
spring.datasource.data=classpath*:data_h2.sql

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jpa.properties.hibernate.format_sql = true
spring.jpa.show-sql=true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Here, We create a new "local" Datasource for our application using it we can perform 'ddl' and 'dml' operations.
# Hence, it's redundant but we enabled spring data source.

#local.datasource.url=jdbc:h2:mem:test;MODE=Oracle
#local.datasource.username=sa
#local.datasource.password1=
#local.datasource.driver-class-name=org.h2.Driver
#local.datasource.max-active=1